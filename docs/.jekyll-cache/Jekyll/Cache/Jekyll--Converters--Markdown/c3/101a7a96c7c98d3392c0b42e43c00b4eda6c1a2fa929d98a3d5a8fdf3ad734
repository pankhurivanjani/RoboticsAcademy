I"≈<p>Robotics-Academy currently supports Linux and Windows operating systems (using docker). Below are the steps for installing the software.</p>

<h2 id="ubuntudebian">Ubuntu/Debian</h2>

<p>The programming environment is composed of the (a) Gazebo simulator, (b) ROS middleware and (c) the Academy package. All this software is open source so there are alternative ways to install all of them directly from the source code. Currently we use Gazebo-7.4.0, ROS Kinetic and JdeRobot-Academy (2018-06-06) releases.</p>

<h3 id="installation">Installation</h3>

<p>Follow the next steps to have the environment up and running, ready to use.</p>

<ol>
  <li>
    <p>Install ROS framework.</p>

    <p>Add the lastest ROS sources:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">sudo </span>sh <span class="nt">-c</span> <span class="s1">'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" &gt; /etc/apt/sources.list.d/ros-latest.list'</span>
</code></pre></div>    </div>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">sudo </span>apt-key adv <span class="nt">--keyserver</span> hkp://ha.pool.sks-keyservers.net:80 <span class="nt">--recv-key</span> 421C365BD9FF1F717815A3895523BAEEB01FA116
</code></pre></div>    </div>
  </li>
  <li>
    <p>Gazebo sources.</p>

    <p>Add the lastest Gazebo sources:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">sudo </span>sh <span class="nt">-c</span> <span class="s1">'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable lsb_release -cs main" &gt; /etc/apt/sources.list.d/gazebo-stable.list'</span>
</code></pre></div>    </div>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">sudo </span>apt-key adv <span class="nt">--keyserver</span> keyserver.ubuntu.com <span class="nt">--recv-key</span> 67170598AF249743
</code></pre></div>    </div>
  </li>
  <li>
    <p>Install the packages.</p>

    <p>Install the following packages:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nb">sudo </span>apt-get <span class="nb">install </span>ros-kinetic-desktop-full
 <span class="nb">sudo </span>apt-get <span class="nb">install </span>gazebo7
 <span class="nb">sudo </span>apt <span class="nb">install </span>jderobot-gazebo-assets
</code></pre></div>    </div>
  </li>
  <li>
    <p>Install the JdeRobot-Academy software</p>

    <p>Once you have JdeRobot installed in your system, you can download and install the Academy software. To do so, you must:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> git clone https://github.com/JdeRobot/Academy.git
</code></pre></div>    </div>
  </li>
</ol>

<h3 id="run-exercises">Run Exercises</h3>
<p>On the directory of each exercise you will find particular directions to launch the simulated scenario and the academic node where you should write your code.</p>

<p>Take a look at the <a href="/exercises">list of exercises</a>.</p>

<h2 id="windowsx64">Windows(x64)</h2>

<p>The programming environment is composed of the (a) Docker with Gazebo simulator, (b) JdeRobot middleware for Python and (c) the TeachingRobotics package. All this software is open source so there are alternative ways to install all of them directly from the source code. Currently we use Gazebo-7.4.0, JdeRobot-5.4.1 and TeachingRobotics-0.1.0 releases. JdeRobot Docker includes the Gazebo plugins, models and configuration files to simulate the robot used in the exercises.</p>

<h3 id="prerequisites">Prerequisites</h3>

<p>First check that you have the following dependencies installed. If not, you can install them in the links provided.</p>

<ul>
  <li>
    <p>Install checked <code class="highlighter-rouge">env</code> variables (Is possible that you need restart to run the PATH). You can <a href="https://www.python.org/ftp/python/3.5.2/python-3.5.2-amd64.exe" target="_blank">download here</a>.</p>
  </li>
  <li>Download qt 5.7 <a href="http://download.qt.io/official_releases/qt/5.7/5.7.0/qt-opensource-windows-x86-msvc2015_64-5.7.0.exe" target="_blank">here</a>.</li>
  <li>Download github Desktop <a href="https://desktop.github.com" target="_blank">from here</a>.</li>
  <li>Download Docker:
    <ul>
      <li><a href="https://download.docker.com/win/stable/InstallDocker.msi" target="_blank">Windows 10 x64 proffesional or enterprise</a></li>
      <li><a href="http://www.docker.com/products/docker-toolbox" target="_blank"> Other Windows x64</a></li>
    </ul>
  </li>
</ul>

<h3 id="installation-1">Installation</h3>

<p>Follow the next four steps to have the environment up and running, ready to use.</p>

<ol>
  <li>
    <p>Upgrade pip.</p>

    <p>Open <code class="highlighter-rouge">CMD</code> or powershell and upgrade pip typing:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> python <span class="nt">-m</span> pip <span class="nb">install</span> <span class="nt">--upgrade</span> pip
</code></pre></div>    </div>
  </li>
  <li>
    <p>Install depencencies.</p>

    <p>Install the following depencencies</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> pip3 <span class="nb">install </span>numpy zeroc-ice
 pip3 <span class="nb">install </span>pyqt5
 pip3 <span class="nb">install </span>opencv-python
</code></pre></div>    </div>
  </li>
  <li>
    <p>Install JdeRobot Python.</p>

    <p>Install JdeRobot Python typing:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> pip3 <span class="nb">install </span>http://jderobot.org/store/aitormf/uploads/windows/JdeRobot-0.1.0-py3-none-any.whl
</code></pre></div>    </div>
  </li>
  <li>
    <p>Clone Robotics-Academy repository.</p>

    <p>Download the Academy software. With git Shell clone the repository as in Linux and run the exercices with <code class="highlighter-rouge">CMD</code> o powershell</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> git clone https://github.com/jderobot/academy.git
</code></pre></div>    </div>
  </li>
</ol>

<p><em>Note: Github repositories are located in <code class="highlighter-rouge">Documents\GitHub</code></em></p>

<h3 id="run-exercises-1">Run Exercises</h3>

<p>Open Kinematics of Docker and push ‚ÄúDocker cli‚Äù.</p>

<p>Run the docker passing the world to use (the first time docker image is downloaded):</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-tiP</span> <span class="nt">--rm</span> <span class="nt">-p</span> 7681:7681 jderobot/jderobot world <span class="o">[</span>world_name]
</code></pre></div></div>

<p>With <code class="highlighter-rouge">CMD</code> or PowerShell go to practice directory in Academy and run it:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python <span class="o">[</span>practice_file][config_file]
</code></pre></div></div>

<p>You can watch a video demonstration.</p>

<!-- Courtesy of embedresponsively.com //-->
<div class="responsive-video-container">

  <iframe src="https://www.youtube-nocookie.com/embed/v00TCr-aSWM" frameborder="0" allowfullscreen=""></iframe>

</div>

:ET